version: '3'
services:
  ipfs:
    #network_mode: "host"
    image: ipfs/go-ipfs
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
    command: ["daemon", "--writable", "--migrate=true", "--agent-version-suffix=docker"]
      #extra_hosts:
      #- "172.18.0.1:host-gateway"
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements"
      ]
    environment:
      POSTGRES_USER: eth-graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: eth-graph-node
        #PGDATA: "/data/postgres"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  graph-node:
    image: graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: eth-graph-node
      postgres_pass: let-me-in
      postgres_db: eth-graph-node
      RUST_BACKTRACE: 1
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://host.docker.internal:8545'
      ETHEREUM_RPC_PARALLEL_REQUESTS: 50000
      GRAPH_LOG: debug
      GRAPH_EXPERIMENTAL_FETCH_TXN_RECEIPTS_CONCURRENTLY: 10000
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 5000
      GRAPH_ETHEREUM_BLOCK_INGESTOR_MAX_CONCURRENT_JSON_RPC_CALLS_FOR_TXN_RECEIPTS: 10000
      GRAPH_ETHEREUM_FETCH_TXN_RECEIPTS_IN_BATCHES: "true"

    extra_hosts:
      - "host.docker.internal:host-gateway"
